/* ==========================================================
   –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets (GViz JSON)
   –í–ê–ñ–ù–û: –≤ –ª–∏—Å—Ç–∞—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤:
   ‚îÄ "–ì—Ä—É–ø–ø—ã":      ID –≥—Ä—É–ø–ø—ã | –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã | –û–ø–∏—Å–∞–Ω–∏–µ
   ‚îÄ "–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏":   ID | –ì—Ä—É–ø–ø–∞ (ID) | –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ | –û–ø–∏—Å–∞–Ω–∏–µ | –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   –í—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è ‚Äî –±–µ–∑ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤, –∫–∞–∫ –∑–¥–µ—Å—å.
========================================================== */

/* ---------- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ: –∑–∞–≥—Ä—É–∑–∫–∞ –ª–∏—Å—Ç–∞ —á–µ—Ä–µ–∑ GViz ---------- */
async function fetchGviz(sheetName) {
  const SHEET_ID = window.GSHEET_ID;
  const url = `https://docs.google.com/spreadsheets/d/${SHEET_ID}/gviz/tq?tqx=out:json&sheet=${encodeURIComponent(sheetName)}`;
  const res = await fetch(url, { cache: "no-store" });
  const text = await res.text();
  const json = JSON.parse(text.substring(47).slice(0, -2)); // —É–±–∏—Ä–∞–µ–º "–æ–±–æ–ª–æ—á–∫—É"
  return json.table; // { cols:[], rows:[] }
}

/* ---------- –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ GViz-—Ç–∞–±–ª–∏—Ü—ã –≤ –æ–±—ä–µ–∫—Ç—ã –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º ---------- */
function gvizToObjects(table) {
  const headers = table.cols.map(c => (c?.label || "").trim());
  const rows = table.rows
    .map(r => (r.c || []).map(cell => (cell && cell.v != null ? String(cell.v) : "")))
    .filter(row => row.some(v => v !== "")); // —É–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

  // –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ ‚Äî —É–±–∏—Ä–∞–µ–º –µ—ë
  const maybeHeader = rows[0] || [];
  const sameHeader = maybeHeader.every((v, i) =>
    headers[i] ? v.trim().toLowerCase() === headers[i].trim().toLowerCase() : false
  );
  const data = sameHeader ? rows.slice(1) : rows;

  return data.map(row => {
    const obj = {};
    headers.forEach((h, i) => (obj[h || `col_${i}`] = row[i] || ""));
    return obj;
  });
}

/* ---------- –ö—ç—à –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–π ---------- */
let professionsCache = null;
async function getProfessions() {
  if (professionsCache) return professionsCache;
  const table = await fetchGviz(window.SHEET_PROFESSIONS || "–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏");
  professionsCache = gvizToObjects(table);
  return professionsCache;
}

/* ---------- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥—Ä—É–ø–ø ---------- */
async function renderGroups() {
  const wrap = document.querySelector(".groups");
  if (!wrap) return;

  wrap.innerHTML = `<div class="groups-loader">–ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã‚Ä¶</div>`;

  try {
    const table = await fetchGviz(window.SHEET_GROUPS || "–ì—Ä—É–ø–ø—ã");
    const groups = gvizToObjects(table);
    wrap.innerHTML = "";

    groups.forEach(g => {
      const id = g["ID –≥—Ä—É–ø–ø—ã"] || g["ID"] || "";
      const title = g["–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã"] || g["–ù–∞–∑–≤–∞–Ω–∏–µ"] || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
      const desc = g["–û–ø–∏—Å–∞–Ω–∏–µ"] || "";

      const card = document.createElement("div");
      card.className = "group-card";
      card.tabIndex = 0;
      card.setAttribute("role", "button");
      card.dataset.groupId = id;
      card.setAttribute("aria-expanded", "false");

      card.innerHTML = `
        <h3>${title}</h3>
        ${desc ? `<p>${desc}</p>` : ""}
      `;

      /* ---------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ ---------- */
      card.addEventListener("click", async () => {
        const isExpanded = card.classList.contains("expanded");

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≥—Ä—É–ø–ø—ã
        document.querySelectorAll(".group-card.expanded").forEach((el) => {
          el.classList.remove("expanded");
          const profList = el.querySelector(".prof-list");
          if (profList) profList.remove();
        });

        // –°–Ω–∏–º–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        wrap.classList.remove("has-active");

        // –ï—Å–ª–∏ –∫–ª–∏–∫–∞–µ–º –ø–æ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø–µ ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ—ë
        if (!isExpanded) {
          wrap.classList.add("has-active");
          card.classList.add("expanded");

          const list = document.createElement("div");
          list.className = "prof-list";
          list.innerHTML = `<div class="groups-loader">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏‚Ä¶</div>`;
          card.appendChild(list);

          const all = await getProfessions();
          const items = all.filter(
            (p) => String(p["–ì—Ä—É–ø–ø–∞ (ID)"]) === String(card.dataset.groupId)
          );

          const clip = (t, n = 140) =>
            (t || "").length > n ? (t || "").slice(0, n).trim() + "‚Ä¶" : (t || "");

          list.innerHTML = "";
          items.forEach((p, i) => {
            const pid = p["ID"] || "";
            const name = p["–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"] || "–ü—Ä–æ—Ñ–µ—Å—Å–∏—è";
            const short = clip(p["–û–ø–∏—Å–∞–Ω–∏–µ"] || "");
            const link = `profession.html?id=${encodeURIComponent(pid)}`;

            const item = document.createElement("div");
            item.className = "prof-card";
            item.style.animation = `fadeInUp 0.4s ease ${i * 0.05}s both`; // üëà –ª—ë–≥–∫–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
            item.innerHTML = `
              <h4>${name}</h4>
              <p>${short}</p>
              <a class="btn" href="${link}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
            `;
            list.appendChild(item);
          });

          // –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
          if (!items.length) {
            list.innerHTML = `<div class="groups-loader" style="opacity:.8">
              –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã.
            </div>`;
          }
        }
      });

      wrap.appendChild(card);
    });
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø:", e);
    wrap.innerHTML = `<div class="groups-loader" style="color:#b00020">
      –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥—Ä—É–ø–ø—ã. –ü—Ä–æ–≤–µ—Ä—å –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤.
    </div>`;
  }
}

/* ---------- –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ ---------- */
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
    e.preventDefault();
    const t = document.querySelector(this.getAttribute('href'));
    if (t) t.scrollIntoView({ behavior: 'smooth' });
  });
});

/* ---------- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---------- */
document.addEventListener("DOMContentLoaded", () => {
  renderGroups();
});

/* ---------- –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π ---------- */
const style = document.createElement("style");
style.textContent = `
@keyframes fadeInUp {
  0% { opacity: 0; transform: translateY(20px); }
  100% { opacity: 1; transform: translateY(0); }
}`;
document.head.appendChild(style);
